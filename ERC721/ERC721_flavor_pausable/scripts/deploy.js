const { Web3 } = require('web3');
const fs = require('fs');
const path = require('path');

// Pre-compiled contract bytecode and ABI
const CONTRACT_BYTECODE = "0x608060405234801561000f575f5ffd5b5060405161292e38038061292e83398181016040528101906100319190610347565b808383815f908161004291906105df565b50806001908161005291906105df565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100c5575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100bc91906106bd565b60405180910390fd5b6100d4816100dd60201b60201c565b505050506106d6565b5f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f604051905090565b5f5ffd5b5f5ffd5b5f5ffd5b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6101ff826101b9565b810181811067ffffffffffffffff8211171561021e5761021d6101c9565b5b80604052505050565b5f6102306101a0565b905061023c82826101f6565b919050565b5f67ffffffffffffffff82111561025b5761025a6101c9565b5b610264826101b9565b9050602081019050919050565b8281835e5f83830152505050565b5f61029161028c84610241565b610227565b9050828152602081018484840111156102ad576102ac6101b5565b5b6102b8848285610271565b509392505050565b5f82601f8301126102d4576102d36101b1565b5b81516102e484826020860161027f565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610316826102ed565b9050919050565b6103268161030c565b8114610330575f5ffd5b50565b5f815190506103418161031d565b92915050565b5f5f5f6060848603121561035e5761035d6101a9565b5b5f84015167ffffffffffffffff81111561037b5761037a6101ad565b5b610387868287016102c0565b935050602084015167ffffffffffffffff8111156103a8576103a76101ad565b5b6103b4868287016102c0565b92505060406103c586828701610333565b9150509250925092565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061041d57607f821691505b6020821081036104305761042f6103d9565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026104927fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610457565b61049c8683610457565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6104e06104db6104d6846104b4565b6104bd565b6104b4565b9050919050565b5f819050919050565b6104f9836104c6565b61050d610505826104e7565b848454610463565b825550505050565b5f5f905090565b610524610515565b61052f8184846104f0565b505050565b5b81811015610552576105475f8261051c565b600181019050610535565b5050565b601f8211156105975761056881610436565b61057184610448565b81016020851015610580578190505b61059461058c85610448565b830182610534565b50505b505050565b5f82821c905092915050565b5f6105b75f198460080261059c565b1980831691505092915050565b5f6105cf83836105a8565b9150826002028217905092915050565b6105e8826103cf565b67ffffffffffffffff811115610601576106006101c9565b5b61060b8254610406565b610616828285610556565b5f60209050601f831160018114610647575f8415610635578287015190505b61063f85826105c4565b8655506106a6565b601f19841661065586610436565b5f5b8281101561067c57848901518255600182019150602085019450602081019050610657565b868310156106995784890151610695601f8916826105a8565b8355505b6001600288020188555050505b505050505050565b6106b78161030c565b82525050565b5f6020820190506106d05f8301846106ae565b92915050565b61224b806106e35f395ff3fe608060405234801561000f575f5ffd5b506004361061012a575f3560e01c806370a08231116100ab578063a22cb4651161006f578063a22cb46514610308578063b88d4fde14610324578063c87b56dd14610340578063e985e9c514610370578063f2fde38b146103a05761012a565b806370a0823114610288578063715018a6146102b85780638456cb59146102c25780638da5cb5b146102cc57806395d89b41146102ea5761012a565b80633f4ba83a116100f25780633f4ba83a146101e457806340d097c3146101ee57806342842e0e1461021e5780635c975abb1461023a5780636352211e146102585761012a565b806301ffc9a71461012e57806306fdde031461015e578063081812fc1461017c578063095ea7b3146101ac57806323b872dd146101c8575b5f5ffd5b61014860048036038101906101439190611a82565b6103bc565b6040516101559190611ac7565b60405180910390f35b61016661049d565b6040516101739190611b50565b60405180910390f35b61019660048036038101906101919190611ba3565b61052c565b6040516101a39190611c0d565b60405180910390f35b6101c660048036038101906101c19190611c50565b610547565b005b6101e260048036038101906101dd9190611c8e565b61055d565b005b6101ec61065c565b005b61020860048036038101906102039190611cde565b61066e565b6040516102159190611d18565b60405180910390f35b61023860048036038101906102339190611c8e565b6106a3565b005b6102426106c2565b60405161024f9190611ac7565b60405180910390f35b610272600480360381019061026d9190611ba3565b6106d8565b60405161027f9190611c0d565b60405180910390f35b6102a2600480360381019061029d9190611cde565b6106e9565b6040516102af9190611d18565b60405180910390f35b6102c061079f565b005b6102ca6107b2565b005b6102d46107c4565b6040516102e19190611c0d565b60405180910390f35b6102f26107ec565b6040516102ff9190611b50565b60405180910390f35b610322600480360381019061031d9190611d5b565b61087c565b005b61033e60048036038101906103399190611ec5565b610892565b005b61035a60048036038101906103559190611ba3565b6108b7565b6040516103679190611b50565b60405180910390f35b61038a60048036038101906103859190611f45565b61091d565b6040516103979190611ac7565b60405180910390f35b6103ba60048036038101906103b59190611cde565b6109ab565b005b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061048657507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610496575061049582610a2f565b5b9050919050565b60605f80546104ab90611fb0565b80601f01602080910402602001604051908101604052809291908181526020018280546104d790611fb0565b80156105225780601f106104f957610100808354040283529160200191610522565b820191905f5260205f20905b81548152906001019060200180831161050557829003601f168201915b5050505050905090565b5f61053682610a98565b5061054082610b1e565b9050919050565b6105598282610554610b57565b610b5e565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036105cd575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016105c49190611c0d565b60405180910390fd5b5f6105e083836105db610b57565b610b70565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610656578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161064d93929190611fe0565b60405180910390fd5b50505050565b610664610b8d565b61066c610c14565b565b5f610677610b8d565b5f60075f81548092919061068a90612042565b91905055905061069a8382610c76565b80915050919050565b6106bd83838360405180602001604052805f815250610892565b505050565b5f600660149054906101000a900460ff16905090565b5f6106e282610a98565b9050919050565b5f5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361075a575f6040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016107519190611c0d565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6107a7610b8d565b6107b05f610c93565b565b6107ba610b8d565b6107c2610d56565b565b5f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600180546107fb90611fb0565b80601f016020809104026020016040519081016040528092919081815260200182805461082790611fb0565b80156108725780601f1061084957610100808354040283529160200191610872565b820191905f5260205f20905b81548152906001019060200180831161085557829003601f168201915b5050505050905090565b61088e610887610b57565b8383610db9565b5050565b61089d84848461055d565b6108b16108a8610b57565b85858585610f22565b50505050565b60606108c282610a98565b505f6108cc6110ce565b90505f8151116108ea5760405180602001604052805f815250610915565b806108f4846110e4565b6040516020016109059291906120c3565b6040516020818303038152906040525b915050919050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b6109b3610b8d565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a23575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610a1a9190611c0d565b60405180910390fd5b610a2c81610c93565b50565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f5f610aa3836111ae565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b1557826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610b0c9190611d18565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b610b6b83838360016111e7565b505050565b5f610b796113a6565b610b848484846113e7565b90509392505050565b610b95610b57565b73ffffffffffffffffffffffffffffffffffffffff16610bb36107c4565b73ffffffffffffffffffffffffffffffffffffffff1614610c1257610bd6610b57565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610c099190611c0d565b60405180910390fd5b565b610c1c6115f2565b5f600660146101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa610c5f610b57565b604051610c6c9190611c0d565b60405180910390a1565b610c8f828260405180602001604052805f815250611632565b5050565b5f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610d5e6113a6565b6001600660146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610da2610b57565b604051610daf9190611c0d565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e2957816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401610e209190611c0d565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610f159190611ac7565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b11156110c7578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02868685856040518563ffffffff1660e01b8152600401610f809493929190612138565b6020604051808303815f875af1925050508015610fbb57506040513d601f19601f82011682018060405250810190610fb89190612196565b60015b61103c573d805f8114610fe9576040519150601f19603f3d011682016040523d82523d5f602084013e610fee565b606091505b505f81510361103457836040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161102b9190611c0d565b60405180910390fd5b805160208201fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146110c557836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016110bc9190611c0d565b60405180910390fd5b505b5050505050565b606060405180602001604052805f815250905090565b60605f60016110f284611655565b0190505f8167ffffffffffffffff8111156111105761110f611da1565b5b6040519080825280601f01601f1916602001820160405280156111425781602001600182028036833780820191505090505b5090505f82602083010190505b6001156111a3578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581611198576111976121c1565b5b0494505f850361114f575b819350505050919050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b808061121f57505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15611351575f61122e84610a98565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561129857508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156112ab57506112a9818461091d565b155b156112ed57826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016112e49190611c0d565b60405180910390fd5b811561134f57838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6113ae6106c2565b156113e5576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f5f6113f2846111ae565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614611433576114328184866117a6565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146114be576114725f855f5f6111e7565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161461153d57600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b6115fa6106c2565b611630576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b61163c8383611869565b611650611647610b57565b5f858585610f22565b505050565b5f5f5f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106116b1577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816116a7576116a66121c1565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106116ee576d04ee2d6d415b85acef810000000083816116e4576116e36121c1565b5b0492506020810190505b662386f26fc10000831061171d57662386f26fc100008381611713576117126121c1565b5b0492506010810190505b6305f5e1008310611746576305f5e100838161173c5761173b6121c1565b5b0492506008810190505b612710831061176b576127108381611761576117606121c1565b5b0492506004810190505b6064831061178e5760648381611784576117836121c1565b5b0492506002810190505b600a831061179d576001810190505b80915050919050565b6117b183838361195c565b611864575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361182557806040517f7e27328900000000000000000000000000000000000000000000000000000000815260040161181c9190611d18565b60405180910390fd5b81816040517f177e802f00000000000000000000000000000000000000000000000000000000815260040161185b9291906121ee565b60405180910390fd5b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036118d9575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016118d09190611c0d565b60405180910390fd5b5f6118e583835f610b70565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611957575f6040517f73c6ac6e00000000000000000000000000000000000000000000000000000000815260040161194e9190611c0d565b60405180910390fd5b505050565b5f5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611a1357508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806119d457506119d3848461091d565b5b80611a1257508273ffffffffffffffffffffffffffffffffffffffff166119fa83610b1e565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f604051905090565b5f5ffd5b5f5ffd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611a6181611a2d565b8114611a6b575f5ffd5b50565b5f81359050611a7c81611a58565b92915050565b5f60208284031215611a9757611a96611a25565b5b5f611aa484828501611a6e565b91505092915050565b5f8115159050919050565b611ac181611aad565b82525050565b5f602082019050611ada5f830184611ab8565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611b2282611ae0565b611b2c8185611aea565b9350611b3c818560208601611afa565b611b4581611b08565b840191505092915050565b5f6020820190508181035f830152611b688184611b18565b905092915050565b5f819050919050565b611b8281611b70565b8114611b8c575f5ffd5b50565b5f81359050611b9d81611b79565b92915050565b5f60208284031215611bb857611bb7611a25565b5b5f611bc584828501611b8f565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611bf782611bce565b9050919050565b611c0781611bed565b82525050565b5f602082019050611c205f830184611bfe565b92915050565b611c2f81611bed565b8114611c39575f5ffd5b50565b5f81359050611c4a81611c26565b92915050565b5f5f60408385031215611c6657611c65611a25565b5b5f611c7385828601611c3c565b9250506020611c8485828601611b8f565b9150509250929050565b5f5f5f60608486031215611ca557611ca4611a25565b5b5f611cb286828701611c3c565b9350506020611cc386828701611c3c565b9250506040611cd486828701611b8f565b9150509250925092565b5f60208284031215611cf357611cf2611a25565b5b5f611d0084828501611c3c565b91505092915050565b611d1281611b70565b82525050565b5f602082019050611d2b5f830184611d09565b92915050565b611d3a81611aad565b8114611d44575f5ffd5b50565b5f81359050611d5581611d31565b92915050565b5f5f60408385031215611d7157611d70611a25565b5b5f611d7e85828601611c3c565b9250506020611d8f85828601611d47565b9150509250929050565b5f5ffd5b5f5ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611dd782611b08565b810181811067ffffffffffffffff82111715611df657611df5611da1565b5b80604052505050565b5f611e08611a1c565b9050611e148282611dce565b919050565b5f67ffffffffffffffff821115611e3357611e32611da1565b5b611e3c82611b08565b9050602081019050919050565b828183375f83830152505050565b5f611e69611e6484611e19565b611dff565b905082815260208101848484011115611e8557611e84611d9d565b5b611e90848285611e49565b509392505050565b5f82601f830112611eac57611eab611d99565b5b8135611ebc848260208601611e57565b91505092915050565b5f5f5f5f60808587031215611edd57611edc611a25565b5b5f611eea87828801611c3c565b9450506020611efb87828801611c3c565b9350506040611f0c87828801611b8f565b925050606085013567ffffffffffffffff811115611f2d57611f2c611a29565b5b611f3987828801611e98565b91505092959194509250565b5f5f60408385031215611f5b57611f5a611a25565b5b5f611f6885828601611c3c565b9250506020611f7985828601611c3c565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611fc757607f821691505b602082108103611fda57611fd9611f83565b5b50919050565b5f606082019050611ff35f830186611bfe565b6120006020830185611d09565b61200d6040830184611bfe565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61204c82611b70565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361207e5761207d612015565b5b600182019050919050565b5f81905092915050565b5f61209d82611ae0565b6120a78185612089565b93506120b7818560208601611afa565b80840191505092915050565b5f6120ce8285612093565b91506120da8284612093565b91508190509392505050565b5f81519050919050565b5f82825260208201905092915050565b5f61210a826120e6565b61211481856120f0565b9350612124818560208601611afa565b61212d81611b08565b840191505092915050565b5f60808201905061214b5f830187611bfe565b6121586020830186611bfe565b6121656040830185611d09565b81810360608301526121778184612100565b905095945050505050565b5f8151905061219081611a58565b92915050565b5f602082840312156121ab576121aa611a25565b5b5f6121b884828501612182565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6040820190506122015f830185611bfe565b61220e6020830184611d09565b939250505056fea2646970667358221220a3798122a6b7f202f60e6a06ffc369c80c94b9162395f07bf06eb437a26a617264736f6c634300081e0033";

const CONTRACT_ABI = [{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"address","name":"initialOwner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"safeMint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"}];

async function main() {
  console.log("🚀 Starting ERC721 Pausable NFT deployment...");

  // Constructor parameters - these will be modified by Bolt based on user input
  const NFT_NAME = "PausableNFT";
  const NFT_SYMBOL = "PNFT";
  const OWNER_ADDRESS = process.env.OWNER_ADDRESS || "0x0000000000000000000000000000000000000000"; // Default to deployer if not specified

  console.log(`\n📋 Deployment parameters:`);
  console.log(`   Name: ${NFT_NAME}`);
  console.log(`   Symbol: ${NFT_SYMBOL}`);
  console.log(`   Owner: ${OWNER_ADDRESS === "0x0000000000000000000000000000000000000000" ? "Deployer Address" : OWNER_ADDRESS}`);

  try {
    // Get configuration from environment
    const PRIVATE_KEY = process.env.PRIVATE_KEY;
    const RPC_URL = process.env.RPC_URL || "https://evm-rpc-testnet.sei-apis.com";

    if (!PRIVATE_KEY) {
      console.error("\n❌ Error: PRIVATE_KEY environment variable is required");
      console.log("\nUsage:");
      console.log("PRIVATE_KEY=your_private_key npm run deploy");
      console.log("PRIVATE_KEY=your_private_key OWNER_ADDRESS=0x... npm run deploy");
      process.exit(1);
    }

    // Initialize Web3
    const web3 = new Web3(RPC_URL);
    
    // Create account from private key
    const account = web3.eth.accounts.privateKeyToAccount('0x' + PRIVATE_KEY.replace('0x', ''));
    web3.eth.accounts.wallet.add(account);
    
    console.log(`\n🔑 Deployer: ${account.address}`);

    // Determine the actual owner address
    const actualOwner = OWNER_ADDRESS === "0x0000000000000000000000000000000000000000" ? account.address : OWNER_ADDRESS;

    // Check balance
    const balance = await web3.eth.getBalance(account.address);
    console.log(`   Balance: ${web3.utils.fromWei(balance, 'ether')} SEI`);

    if (balance === '0') {
      console.error("\n❌ Error: Insufficient balance. Please get test SEI from the faucet:");
      console.log("   https://atlantic-2.app.sei.io/faucet");
      process.exit(1);
    }

    // Create contract instance
    const contract = new web3.eth.Contract(CONTRACT_ABI);

    // Prepare deployment
    console.log("\n⏳ Deploying contract...");
    const deployTx = contract.deploy({
      data: CONTRACT_BYTECODE,
      arguments: [NFT_NAME, NFT_SYMBOL, actualOwner]
    });

    // Estimate gas
    const gas = await deployTx.estimateGas({ from: account.address });
    console.log(`   Estimated gas: ${gas}`);

    // Send deployment transaction
    const gasPrice = await web3.eth.getGasPrice();
    const gasLimit = BigInt(gas) * BigInt(120) / BigInt(100); // Add 20% buffer
    
    const newContract = await deployTx.send({
      from: account.address,
      gas: gasLimit.toString(),
      gasPrice: gasPrice.toString()
    });

    // Get the deployed contract address
    const nftAddress = newContract.options.address;

    console.log(`\n✅ NFT deployed successfully!`);
    console.log(`   Address: ${nftAddress}`);

    // Get contract details for verification
    const name = await newContract.methods.name().call();
    const symbol = await newContract.methods.symbol().call();
    const owner = await newContract.methods.owner().call();
    const paused = await newContract.methods.paused().call();
    
    console.log(`\n📊 NFT details:`);
    console.log(`   Name: ${name}`);
    console.log(`   Symbol: ${symbol}`);
    console.log(`   Owner: ${owner}`);
    console.log(`   Paused: ${paused}`);
    console.log(`   Features: ✅ Pausable, ✅ Ownable, ✅ Auto-increment IDs`);

    // Save deployment info
    const deploymentInfo = {
      network: "sei-testnet",
      nftAddress: nftAddress,
      nftName: NFT_NAME,
      nftSymbol: NFT_SYMBOL,
      owner: owner,
      deploymentTransaction: "See explorer for transaction details",
      deployer: account.address,
      deployedAt: new Date().toISOString(),
      features: {
        pausable: true,
        ownable: true,
        autoIncrementIds: true
      }
    };

    // Save deployment info to deployments directory
    const deploymentsPath = path.join(__dirname, "../deployments");
    if (!fs.existsSync(deploymentsPath)) {
      fs.mkdirSync(deploymentsPath, { recursive: true });
    }

    fs.writeFileSync(
      path.join(deploymentsPath, "sei-testnet-deployment.json"),
      JSON.stringify(deploymentInfo, null, 2)
    );

    // Save contract ABI
    fs.writeFileSync(
      path.join(deploymentsPath, "ERC721_flavor_pausable.json"),
      JSON.stringify({
        abi: CONTRACT_ABI,
        bytecode: CONTRACT_BYTECODE
      }, null, 2)
    );

    console.log(`\n📁 Deployment info saved to deployments/`);

    // SEI Testnet specific information
    console.log("\n🌊 SEI Testnet Deployment Info:");
    console.log(`   Network: SEI Atlantic-2 Testnet`);
    console.log(`   Chain ID: 1328`);
    console.log(`   Explorer: https://testnet.seistream.app/contracts/${nftAddress}`);
    console.log(`   Faucet: https://atlantic-2.app.sei.io/faucet`);
    
    console.log("\n🎉 Deployment complete!");

  } catch (error) {
    console.error("\n❌ Deployment failed:", error.message);
    process.exit(1);
  }
}

main();